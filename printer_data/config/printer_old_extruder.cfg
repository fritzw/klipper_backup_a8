[include mainsail.cfg]

# This file contains common pin mappings for Anet A8 printer from 2016
# and 2017. To use this config, the firmware should be compiled for
# the AVR atmega1284p.

# Note that the "make flash" command does not work with Anet boards -
# the boards are typically flashed with this command:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf                                                                       .hex

# See the example.cfg file for a description of available parameters.

[bed_mesh]
speed: 300
horizontal_move_z: 5.5
mesh_min: 10,10
mesh_max: 210,210
#mesh_max: 205,170
probe_count: 5,5

[bed_screws]
screw1: 5,5
screw2: 5,215
screw3: 215,215
screw4: 215,5

[bltouch]
sensor_pin: ^PC4
control_pin: PA4
x_offset: -20
y_offset: -6
# z_offset: 0.650 # Increase this to move the nozzle closer to the bed
speed: 3
lift_speed: 20
stow_on_each_sample: false
#SPEED=0.5: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.007 (samples=10 retract=2.000 speed=0.5 lift_speed=20.0): probe accuracy results: maximum 3.012500, minimum 3.005000, range 0.007500, average 3.009250, median 3.010000, standard deviation 0.002250
#SPEED=1: PROBE_ACCURACY at X:130.000 Y:116.000 Z:10.000 (samples=20 retract=2.000 speed=1.0 lift_speed=20.0): probe accuracy results: maximum 3.032500, minimum 3.027500, range 0.005000, average 3.029500, median 3.030000, standard deviation 0.001500
#SPEED=2: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.027 (samples=20 retract=2.000 speed=2.0 lift_speed=20.0): probe accuracy results: maximum 3.015000, minimum 3.010000, range 0.005000, average 3.013250, median 3.012500, standard deviation 0.001601
#SPEED=4: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.010 (samples=20 retract=2.000 speed=4.0 lift_speed=20.0): probe accuracy results: maximum 3.007500, minimum 3.000000, range 0.007500, average 3.002875, median 3.002500, standard deviation 0.001816
#SPEED=8: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.002 (samples=20 retract=2.000 speed=8.0 lift_speed=20.0): probe accuracy results: maximum 2.990000, minimum 2.982500, range 0.007500, average 2.985500, median 2.985000, standard deviation 0.002031

[firmware_retraction]
retract_length: 0.5
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 60

[gcode_arcs]
resolution: 0.5
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[safe_z_home]
home_xy_position: 130,116 # Bed Center, including BLTouch offset
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[input_shaper]
shaper_freq_x: 28.8  # frequency for the X mark of the test model
shaper_freq_y: 27.2  # frequency for the Y mark of the test model

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[stepper_x]
step_pin: PD7
dir_pin: PC5
enable_pin: !PD6
#step_distance: .01
rotation_distance: 32
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: ^!PC2
position_endstop: -30
position_max: 230
position_min: -30
homing_speed: 80

[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PD6
#step_distance: .01
rotation_distance: 32
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: ^!PC3
position_endstop: -10.5
position_min: -10.5
position_max: 222
homing_speed: 80

[pause_resume]
[exclude_object]

[gcode_macro M203] ;  Set max feedrate
gcode:
    {% set X = params.X|float %}
    SET_VELOCITY_LIMIT VELOCITY={X}


[gcode_macro M600]
gcode:
    {% set X = params.X|default(-20)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(5)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-1 F2700
    G1 Z{Z}
    G90
    G1 X{X} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro START_PRINT]
gcode:
    CLEAR_PAUSE
    G28


[gcode_macro PROBE_POINT]
gcode:
    {% set X = params.X|default(110)|float %}
    {% set Y = params.Y|default(110)|float %}
    G1 F10000
    G1 Z10
    G1 X{X - printer.configfile.settings.bltouch.x_offset} Y{Y - printer.configfile.settings.bltouch.y_offset}
    PROBE PROBE_SPEED=2
    G1 Z10

[gcode_macro PROBE_SAVE_RESULT]
variable_left: 0
variable_right: 0
gcode:
    SET_GCODE_VARIABLE MACRO=PROBE_SAVE_RESULT VARIABLE={params.VARIABLE} VALUE={printer.probe.last_z_result}

[gcode_macro Z_TILT_CALCULATE]
variable_tilt: 0
gcode:
    {% set left = printer["gcode_macro PROBE_SAVE_RESULT"].left|float %}
    {% set right = printer["gcode_macro PROBE_SAVE_RESULT"].right|float %}
    {% set tilt = right - left %}
    M117 Tilt is {"%.3f" | format(tilt)}
    M118 Tilt is {"%.3f" | format(tilt)}
    SET_GCODE_VARIABLE MACRO=Z_TILT_CALCULATE VARIABLE=tilt VALUE={tilt}

[gcode_macro Z_TILT_MEASURE]
gcode:
    M117 Measuring Tilt
    PROBE_POINT X=40
    PROBE_SAVE_RESULT VARIABLE=left
    PROBE_POINT X=180
    PROBE_SAVE_RESULT VARIABLE=right
    Z_TILT_CALCULATE

[gcode_macro Z_TILT_ALIGN_IF_NECESSARY]
gcode:
    Z_TILT_MEASURE
    Z_TILT_ALIGN_CHECK_NECESSARY

[gcode_macro Z_TILT_ALIGN_CHECK_NECESSARY]
variable_tilt_threshold: 0.15
gcode:
    {% set threshold = printer["gcode_macro Z_TILT_ALIGN_CHECK_NECESSARY"].tilt_threshold|float %}
    {% set tilt = printer["gcode_macro Z_TILT_CALCULATE"].tilt|float %}
    {% if tilt|abs > threshold %}
    M117 Tilt {"%.3f" | format(tilt)}, aligning
    M118 Tilt {"%.3f" | format(tilt)}, aligning
    Z_TILT_FORCE_ALIGN
    Z_TILT_MEASURE
    Z_TILT_ALIGN_CANCEL_IF_BAD
    {% else %}
    M117 Tilt {"%.3f" | format(tilt)}, ok
    M118 Tilt {"%.3f" | format(tilt)}, ok
    {% endif %}

[gcode_macro Z_TILT_ALIGN_CANCEL_IF_BAD]
gcode:
    {% set threshold = printer["gcode_macro Z_TILT_ALIGN_CHECK_NECESSARY"].tilt_threshold|float %}
    {% set tilt = printer["gcode_macro Z_TILT_CALCULATE"].tilt|float %}
    {% if tilt|abs > threshold %}
    M117 Tilt {"%.3f" | format(tilt)}, CANCEL_PRINT
    M118 Tilt {"%.3f" | format(tilt)}, CANCEL_PRINT
    CANCEL_PRINT
    {% else %}
    M117 Tilt {"%.3f" | format(tilt)}, ok
    M118 Tilt {"%.3f" | format(tilt)}, ok
    {% endif %}

[gcode_macro Z_TILT_FORCE_ALIGN]
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}
    G1 F10000
    G1 X-20 Y-10
    G1 Z0
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-8 VELOCITY=2
    FORCE_MOVE STEPPER=stepper_z DISTANCE=8 VELOCITY=10
    G28 Z


[gcode_macro BED_MESH_CALIBRATE_ONCE]
gcode:
    {% if printer.bed_mesh.probed_matrix|count > 1 %}
    M117 Skip calibration
    M118 Skip calibration
    {% else %}
    M117 Calibrating bed
    M118 Calibrating bed
    BED_MESH_CALIBRATE
    {% endif %}

[gcode_macro BED_TILT]
gcode:
    G28 Z
    G1 Z5
    G1 X10 Y110
    PROBE
    G1 Z5
    G1 X210 Y110
    PROBE
    G1 Z5
    G1 X110 Y110

[stepper_z]
step_pin: PB3
dir_pin: !PB2
enable_pin: !PA5
#step_distance: .0025
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_min: -0.6
position_max: 240
homing_speed: 8
second_homing_speed: 8

[extruder]
step_pin: PB1
dir_pin: PB0
enable_pin: !PD6
#step_distance: .0101956
rotation_distance: 8.19 # Hemera
full_steps_per_rotation: 200
filament_diameter: 1.750
microsteps: 16
max_extrude_only_velocity: 60 # Hemera

#rotation_distance: 33.155  # Anet A8 (tuned)
#max_extrude_only_velocity: 60
max_extrude_cross_section: 50000
max_extrude_only_distance: 250
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.015
heater_pin: PD5
#sensor_type: ATC Semitec 104GT-2  # Anet A8
sensor_type: ATC Semitec 104NT-4-R025H42G   # Revo Hemera
sensor_pin: PA7
#control: pid
#pid_Kp: 2.151492
#pid_Ki: 0.633897
#pid_Kd: 230.042965
min_temp: 0
max_temp: 260

[verify_heater extruder]
max_error: 200 # defeault 120
hysteresis: 12


[heater_bed]
heater_pin: PD4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA6
#control: watermark
#control: pid
#pid_Kp: 2.151492
#pid_Ki: 0.633897
#pid_Kd: 230.042965
min_temp: 0
max_temp: 130

[fan]
pin: PB4

[respond] # Allow printing messages on the console

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_accel_to_decel: 2500
max_z_velocity: 20
max_z_accel: 100

[display]
lcd_type: hd44780
rs_pin: PA3
e_pin: PA2
d4_pin: PD2
d5_pin: PD3
d6_pin: PC0
d7_pin: PC1

# M900 sets pressure advance in Marlin.
# The smaller values for Marlin 1.5 are compatible with Klipper.
# The old values are not, but PrusaSlicer sends both, so we ignore them.
[gcode_macro M900]
gcode:
  {% set K = params.K|default(0.0)|float %}
  {% if K < 1 %} # Use only sane values (Marlin pre-1.5 values are in the range 5-80)
  SET_PRESSURE_ADVANCE ADVANCE={K}
  {% endif %}

# Accept marlins mesh calibrate gcode (e.g. for Linear Advance test pattern generator)
[gcode_macro G29]
gcode:
  BED_MESH_CALIBRATE


[endstop_phase]

#[homing_override]
#gcode:
#   G28 X Y
#   G28 Z
#axes: z

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 44.024
#*# pid_ki = 1.905
#*# pid_kd = 359.462
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.240
#*# pid_ki = 1.410
#*# pid_kd = 874.487
#*#
#*# [bltouch]
#*# z_offset = 3.650
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.160000, 0.110000, 0.115000, 0.090000, 0.095000
#*# 	-0.002500, -0.032500, 0.015000, -0.045000, -0.055000
#*# 	0.002500, -0.032500, 0.012500, -0.022500, -0.060000
#*# 	-0.092500, -0.095000, -0.070000, -0.097500, -0.080000
#*# 	-0.107500, -0.065000, -0.047500, -0.057500, -0.042500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 210.0
#*# min_y = 10.0
#*# max_y = 210.0
#*#
#*# [bed_mesh 60]
#*# version = 1
#*# points =
#*# 	-0.027500, -0.005000, 0.035000, 0.022500, 0.032500
#*# 	-0.052500, -0.050000, 0.010000, -0.052500, -0.075000
#*# 	0.005000, 0.030000, 0.032500, -0.022500, -0.060000
#*# 	0.032500, 0.055000, 0.062500, -0.015000, -0.067500
#*# 	0.025000, 0.047500, 0.045000, 0.002500, -0.035000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 210.0
#*# min_y = 10.0
#*# max_y = 178.0
