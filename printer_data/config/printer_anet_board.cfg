[include mainsail.cfg]

# This file contains common pin mappings for Anet A8 printer from 2016
# and 2017. To use this config, the firmware should be compiled for
# the AVR atmega1284p.

# Note that the "make flash" command does not work with Anet boards -
# the boards are typically flashed with this command:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf                                                                       .hex

# See the example.cfg file for a description of available parameters.

# [bed_mesh]
# speed: 300
# horizontal_move_z: 5.5
# mesh_min: 10,10
# mesh_max: 210,210
# #mesh_max: 205,170
# probe_count: 5,5

[bed_mesh]
speed: 300
horizontal_move_z: 3
mesh_min: 10,17
mesh_max: 201,210
#mesh_max: 205,170
probe_count: 5,5
algorithm: bicubic
bicubic_tension: .5
zero_reference_position: 110,110
mesh_pps: 3, 3

[bed_screws]
screw1: 5,5
screw2: 5,215
screw3: 215,215
screw4: 215,5

[bltouch]
sensor_pin: ^PC4
control_pin: PA4
x_offset: -29  ## ALSO UPDATE [safe_z_home].home_xy_position
y_offset: 21  ## ALSO UPDATE [safe_z_home].home_xy_position
# z_offset: 0.650 # Increase this to move the nozzle closer to the bed
speed: 2
lift_speed: 20
stow_on_each_sample: false
#SPEED=0.5: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.007 (samples=10 retract=2.000 speed=0.5 lift_speed=20.0): probe accuracy results: maximum 3.012500, minimum 3.005000, range 0.007500, average 3.009250, median 3.010000, standard deviation 0.002250
#SPEED=1: PROBE_ACCURACY at X:130.000 Y:116.000 Z:10.000 (samples=20 retract=2.000 speed=1.0 lift_speed=20.0): probe accuracy results: maximum 3.032500, minimum 3.027500, range 0.005000, average 3.029500, median 3.030000, standard deviation 0.001500
#SPEED=2: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.027 (samples=20 retract=2.000 speed=2.0 lift_speed=20.0): probe accuracy results: maximum 3.015000, minimum 3.010000, range 0.005000, average 3.013250, median 3.012500, standard deviation 0.001601
#SPEED=4: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.010 (samples=20 retract=2.000 speed=4.0 lift_speed=20.0): probe accuracy results: maximum 3.007500, minimum 3.000000, range 0.007500, average 3.002875, median 3.002500, standard deviation 0.001816
#SPEED=8: PROBE_ACCURACY at X:130.000 Y:116.000 Z:5.002 (samples=20 retract=2.000 speed=8.0 lift_speed=20.0): probe accuracy results: maximum 2.990000, minimum 2.982500, range 0.007500, average 2.985500, median 2.985000, standard deviation 0.002031

[safe_z_home]
home_xy_position: 139,89 # Bed Center, including BLTouch offset
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5


[firmware_retraction]
retract_length: 0.5
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 60

[gcode_arcs]
resolution: 0.5
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[input_shaper]
shaper_freq_x: 37.03  # frequency for the X mark of the test model
shaper_freq_y: 30.07  # frequency for the Y mark of the test model

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[pause_resume]
recover_velocity: 300

[exclude_object]


######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

# [gcode_macro PRINT_LINE]
# gcode:
#     {% set THICKNESS = params.THICKNESS|default(0.2)|float %}
#     {% set WIDTH = params.WIDTH|default(0.5)|float %}
#     {% set FLOW = params.FLOW|default(5)|float %}
#     {% set FILAMENT_DIAMETER = params.FLOW|default(5)|float %}
    
#     {% set cross_section = WIDTH * FLOW %}
#     {% set X = params.X|default(-20)|float %}
#     {% set Y = params.Y|default(0)|float %}
#     {% set dx = (X - gcode_move.gcode_position.x) | abs %}
#     {% set dy = (Y - gcode_move.gcode_position.y) | abs %}
#     {% set xy_distance = math.sqrt(dx ** 2 + dy ** 2) %}
#     {% set total_material = xy_distance * cross_section %}
#     {% set filament_cross_section = configfile.settings.extruder.filament_diameter ** 2 / 4 * 3.14159 %}
#     {% set e_distance = total_material / filament_cross_section %}
#     {% set total_seconds = total_material / flow %}
#     {% set feed_rate = 60 * xy_distance / total_seconds %}
#     G1 X{X} Y{Y} E{e_distance} F{feed_rate}



[gcode_macro START_PRINT]
gcode:
    #{% set NOZZLE = params.NOZZLE|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set MAX_FLOW_MM_PER_S = params.MAX_FLOW|default(10)|float %}
    SET_PRESSURE_ADVANCE ADVANCE=0.015 SMOOTH_TIME=0.004
    SET_RETRACTION RETRACT_LENGTH=1 RETRACT_SPEED=30
    CLEAR_PAUSE
    M83  ; extruder relative mode
    M104 S180 ; preheat extruder for filament change
    M140 S{BED_TEMP} ; set actual bed temp
    G28 ; Home first to check tilt
    Z_TILT_ALIGN_IF_NECESSARY ; Check X axis tilt and fix if necessary
    G1 Z10 F4000
    G1 X-10 F8000
    M190 S{BED_TEMP} ; wait for bed temp
    ;M104 S140 ; cool extruder to prevent dripping
    G28 ; home all without mesh bed level
    BED_MESH_CALIBRATE ADAPTIVE=1
    ;BED_MESH_CALIBRATE_ONCE
    M104 S{EXTRUDER_TEMP} ; set actual extruder temp
    
    ; WIPE NOZZLE WITH WIPER
    ;G1 Z15 ; Move above wiper
    ;G1 X-25 ; Purge position to the left of wiper
    ;G1 Y85  ; Move wiper to nozzle
    ;G1 Z4.8 ; Move nozzle to wiper height
    ;M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    ;G1 E20  F{[60,MAX_FLOW_MM_PER_S/2.4 * 0.7 * 60]|min} ; Purge Nozzle (slow start to avoid curling)
    ;G1 E10  F{[120,MAX_FLOW_MM_PER_S/2.4 * 0.7 * 60]|min} ; Purge Nozzle (speed up)
    ;G1 E10  F{[200,MAX_FLOW_MM_PER_S/2.4 * 0.7 * 60]|min} ; Purge Nozzle
    ;G1 E-0.1 F800 ; Small retract to release pressure
    ;G1 F10000 ; Wipe quickly
    ;G1 X0 ; First wipe
    ;G1 X-15 Y65 ; Second wipe
    ;G1 X0; Third wipe
    #G1 X[first_layer_print_min_0] Y[first_layer_print_min_1]
    #G1 Z0.2 ; Go to correct height
    #G1 E0.6 F{MAX_FLOW_MM_PER_S/2.4 * 0.9 * 60} ; deretract and a bit more

    ; PRIME NOZZLE ON BED HANDLE
    G1 Z10 ; Travel Height
    G1 Y-8 ; Move bed handle below nozzle
    G1 X70 ; Left edge of handle
    G1 Z0.25 ; Move nozzle to print height
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    G91 ; Relative movement for wipe
    G1 X80 E8.5  F1440 ; Purge Nozzle
    G1 Y1
    G1 X-80 E8.5  F1440 ; Purge Nozzle
    G1 Y1
    G1 X80 E8.5  F1440 ; Purge Nozzle
    G1 Y1
    G1 X-80 E8.5  F1440 ; Purge Nozzle
    G1 Y1
    G1 X80 E8.5  F1440 ; Purge Nozzle
    G1 Y1
    G1 X-80 E8.5  F1440 ; Purge Nozzle
    G1 Y1
    G1 E-0.1 F800 ; Small retract to release pressure
    G90 ; Absolute movement for print
    M117 ; Clear message
    G1 F20000
    

[gcode_macro END_PRINT]
gcode:
    G4 # Wait until movement is complete
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    M221 S100 # Reset Flow percentage
    # Move nozzle away from print while retracting
    G91
    G1 E-1 F900
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z2 F3000
    G90
    G0 X-20 Y220
    # Don't disable steppers to prevent Z sagging. X/Y will time out
    #M84

[gcode_macro COLD_PULL]
gcode:
    #{% set NOZZLE = params.NOZZLE|float %}
    {% set TEMP = params.TEMP|default(80)|float %}
    {% set SPEED_SLOW = params.SPEED_SLOW|default(0.5)|float %}
    {% set SPEED_FAST = params.SPEED_FAST|default(10)|float %}
    ; Cool down to room temperature (with fan to spped things up)
    M106 S100
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=40
    TEMPERATURE_WAIT  SENSOR=extruder MINIMUM=37 MAXIMUM=43
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=0
    G4 P5000 # Wait for 5 seconds
    ; Heat up and pull on filament, first slowly then quickly quickly
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=80
    TEMPERATURE_WAIT  SENSOR=extruder  MINIMUM=77  MAXIMUM=83
    FORCE_MOVE  STEPPER=extruder  DISTANCE=-5  VELOCITY={SPEED_SLOW}
    FORCE_MOVE  STEPPER=extruder  DISTANCE=-50  VELOCITY={SPEED_FAST}
    ; Done, turn everything off again
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=0
    M106 S0

[gcode_macro M203] ;  Set max feedrate
gcode:
    {% set X = params.X|float %}
    SET_VELOCITY_LIMIT VELOCITY={X}


[gcode_macro M600]
gcode:
    {% set X = params.X|default(-20)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(5)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-1 F2700
    G1 Z{Z}
    G90
    G1 X{X} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PROBE_POINT]
gcode:
    {% set X = params.X|default(110)|float %}
    {% set Y = params.Y|default(110)|float %}
    G1 F10000
    G1 Z10
    G1 X{X - printer.configfile.settings.bltouch.x_offset} Y{Y - printer.configfile.settings.bltouch.y_offset}
    PROBE PROBE_SPEED=2
    G1 Z10

[gcode_macro PROBE_SAVE_RESULT]
variable_left: 0
variable_right: 0
gcode:
    SET_GCODE_VARIABLE MACRO=PROBE_SAVE_RESULT VARIABLE={params.VARIABLE} VALUE={printer.probe.last_z_result}

[gcode_macro Z_TILT_CALCULATE]
variable_tilt: 0
gcode:
    {% set left = printer["gcode_macro PROBE_SAVE_RESULT"].left|float %}
    {% set right = printer["gcode_macro PROBE_SAVE_RESULT"].right|float %}
    {% set tilt = right - left %}
    M117 Tilt is {"%.3f" | format(tilt)}
    M118 Tilt is {"%.3f" | format(tilt)}
    SET_GCODE_VARIABLE MACRO=Z_TILT_CALCULATE VARIABLE=tilt VALUE={tilt}

[gcode_macro Z_TILT_MEASURE]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}
    M117 Measuring Tilt
    PROBE_POINT X=40
    PROBE_SAVE_RESULT VARIABLE=left
    PROBE_POINT X=180
    PROBE_SAVE_RESULT VARIABLE=right
    Z_TILT_CALCULATE

[gcode_macro Z_TILT_ALIGN_IF_NECESSARY]
gcode:
    Z_TILT_MEASURE
    #Z_TILT_ALIGN_CANCEL_IF_BAD # TODO: remove line and uncomment the next when endstops are restored
    Z_TILT_ALIGN_CHECK_NECESSARY

[gcode_macro Z_TILT_ALIGN_CHECK_NECESSARY]
variable_tilt_threshold: 0.15
gcode:
    {% set threshold = printer["gcode_macro Z_TILT_ALIGN_CHECK_NECESSARY"].tilt_threshold|float %}
    {% set tilt = printer["gcode_macro Z_TILT_CALCULATE"].tilt|float %}
    {% if tilt|abs > threshold %}
    M117 Tilt {"%.3f" | format(tilt)}, aligning
    M118 Tilt {"%.3f" | format(tilt)}, aligning
    Z_TILT_FORCE_ALIGN
    Z_TILT_MEASURE
    Z_TILT_ALIGN_CANCEL_IF_BAD
    {% else %}
    M117 Tilt {"%.3f" | format(tilt)}, ok
    M118 Tilt {"%.3f" | format(tilt)}, ok
    {% endif %}

[gcode_macro Z_TILT_ALIGN_CANCEL_IF_BAD]
gcode:
    {% set threshold = printer["gcode_macro Z_TILT_ALIGN_CHECK_NECESSARY"].tilt_threshold|float %}
    {% set tilt = printer["gcode_macro Z_TILT_CALCULATE"].tilt|float %}
    {% if tilt|abs > threshold %}
    M117 Tilt {"%.3f" | format(tilt)}, CANCEL_PRINT
    M118 Tilt {"%.3f" | format(tilt)}, CANCEL_PRINT
    CANCEL_PRINT
    {% else %}
    M117 Tilt {"%.3f" | format(tilt)}, ok
    M118 Tilt {"%.3f" | format(tilt)}, ok
    {% endif %}

[gcode_macro Z_TILT_FORCE_ALIGN_BOTTOM]
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}
    G1 F10000
    G1 X-20 Y-10
    G1 Z0
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-8 VELOCITY=2
    FORCE_MOVE STEPPER=stepper_z DISTANCE=8 VELOCITY=10
    G28 Z

[gcode_macro Z_TILT_FORCE_ALIGN]
gcode:
    CLEAR_PAUSE
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}
    G1 F15000
    G1 X110 Y110
    G1 Z240
    FORCE_MOVE STEPPER=stepper_z DISTANCE=15 VELOCITY=20
    FORCE_MOVE STEPPER=stepper_z DISTANCE=1 VELOCITY=1
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-10 VELOCITY=20
    G1 Z10
    G28 Z


[gcode_macro BED_MESH_CALIBRATE_ONCE]
gcode:
    {% if printer.bed_mesh.probed_matrix|count > 1 %}
    M117 Skip calibration
    M118 Skip calibration
    {% else %}
    M117 Calibrating bed
    M118 Calibrating bed
    BED_MESH_CALIBRATE
    {% endif %}

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_accel_to_decel: 2500
max_z_velocity: 20
max_z_accel: 100

[idle_timeout]
gcode:
    TURN_OFF_HEATERS
    M107
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[stepper_x]
step_pin: PD7
dir_pin: PC5
enable_pin: !PD6
#step_distance: .01
rotation_distance: 32
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: ^!PC2
position_endstop: -22.5
position_max: 230
position_min: -22.5
homing_speed: 80

[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PD6
#step_distance: .01
rotation_distance: 32
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: ^!PC3
position_endstop: -10.5
position_min: -10.5
position_max: 222
homing_speed: 80

[stepper_z]
step_pin: PB3
dir_pin: !PB2
enable_pin: !PA5
endstop_pin: probe:z_virtual_endstop
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 16
#position_endstop: 0
position_min: -0.6
position_max: 240
homing_speed: 8
second_homing_speed: 8

[extruder]
step_pin: PB1
dir_pin: PB0
enable_pin: !PD6
#step_distance: .0101956
rotation_distance: 8.19 # Hemera
full_steps_per_rotation: 200
filament_diameter: 1.750
microsteps: 16
max_extrude_only_velocity: 60 # Hemera

#rotation_distance: 33.155  # Anet A8 (tuned)
#max_extrude_only_velocity: 60
max_extrude_cross_section: 50000
max_extrude_only_distance: 250
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.015
heater_pin: PD5
#sensor_type: ATC Semitec 104GT-2  # Anet A8
sensor_type: ATC Semitec 104NT-4-R025H42G   # Revo Hemera
sensor_pin: PA7
#control: pid
#pid_Kp: 2.151492
#pid_Ki: 0.633897
#pid_Kd: 230.042965
min_temp: 0
max_temp: 260

[verify_heater extruder]
max_error: 200 # defeault 120
hysteresis: 12


[heater_bed]
heater_pin: PD4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA6
#control: watermark
#control: pid
#pid_Kp: 2.151492
#pid_Ki: 0.633897
#pid_Kd: 230.042965
min_temp: 0
max_temp: 130

[fan]
pin: PB4

[respond] # Allow printing messages on the console

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

[display]
lcd_type: hd44780
rs_pin: PA3
e_pin: PA2
d4_pin: PD2
d5_pin: PD3
d6_pin: PC0
d7_pin: PC1

# M900 sets pressure advance in Marlin.
# The smaller values for Marlin 1.5 are compatible with Klipper.
# The old values are not, but PrusaSlicer sends both, so we ignore them.
[gcode_macro M900]
gcode:
  {% set K = params.K|default(0.0)|float %}
  {% if K < 1 %} # Use only sane values (Marlin pre-1.5 values are in the range 5-80)
  SET_PRESSURE_ADVANCE ADVANCE={K}
  {% endif %}

# Accept marlins mesh calibrate gcode (e.g. for Linear Advance test pattern generator)
[gcode_macro G29]
gcode:
  BED_MESH_CALIBRATE


[endstop_phase]

#[homing_override]
#gcode:
#   G28 X Y
#   G28 Z
#axes: z

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 32.808
#*# pid_ki = 4.050
#*# pid_kd = 66.436
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.240
#*# pid_ki = 1.410
#*# pid_kd = 874.487
#*#
#*# [bltouch]
#*# z_offset = 0.975
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.060854, 0.045854, 0.053354, -0.044146, -0.059146
#*# 	  -0.009146, -0.011646, -0.006646, -0.089146, -0.141646
#*# 	  -0.009146, 0.000854, 0.005854, -0.069146, -0.134146
#*# 	  -0.044146, -0.029146, -0.011646, -0.089146, -0.134146
#*# 	  -0.009146, 0.023354, -0.006646, -0.086646, -0.104146
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
#*#
#*# [bed_mesh 60]
#*# version = 1
#*# points =
#*# 	-0.027500, -0.005000, 0.035000, 0.022500, 0.032500
#*# 	-0.052500, -0.050000, 0.010000, -0.052500, -0.075000
#*# 	0.005000, 0.030000, 0.032500, -0.022500, -0.060000
#*# 	0.032500, 0.055000, 0.062500, -0.015000, -0.067500
#*# 	0.025000, 0.047500, 0.045000, 0.002500, -0.035000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 210.0
#*# min_y = 10.0
#*# max_y = 178.0
#*#
#*# [bed_mesh test1]
#*# version = 1
#*# points =
#*# 	0.067273, 0.079773, 0.102273, 0.027273, 0.057273
#*# 	-0.057727, -0.017727, 0.022273, -0.050227, -0.070227
#*# 	-0.052727, -0.020227, 0.002273, -0.060227, -0.070227
#*# 	-0.080227, -0.037727, -0.022727, -0.077727, -0.072727
#*# 	-0.060227, -0.012727, -0.032727, -0.097727, -0.070227
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
#*#
#*# [bed_mesh test2]
#*# version = 1
#*# points =
#*# 	0.059905, 0.079905, 0.099905, 0.032405, 0.049905
#*# 	-0.062595, -0.020095, 0.017405, -0.055095, -0.075095
#*# 	-0.060095, -0.022595, 0.002405, -0.060095, -0.075095
#*# 	-0.082595, -0.042595, -0.025095, -0.077595, -0.082595
#*# 	-0.065095, -0.017595, -0.037595, -0.097595, -0.077595
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
#*#
#*# [bed_mesh test3]
#*# version = 1
#*# points =
#*# 	0.050715, 0.063215, 0.088215, 0.013215, 0.043215
#*# 	-0.074285, -0.034285, 0.005715, -0.064285, -0.086785
#*# 	-0.056785, -0.031785, 0.003215, -0.074285, -0.086785
#*# 	-0.094285, -0.051785, -0.036785, -0.096785, -0.094285
#*# 	-0.089285, -0.029285, -0.051785, -0.109285, -0.086785
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
#*#
#*# [bed_mesh test4]
#*# version = 1
#*# points =
#*# 	0.072415, 0.079915, 0.102415, 0.034915, 0.054915
#*# 	-0.060085, -0.025085, 0.019915, -0.055085, -0.075085
#*# 	-0.045085, -0.022585, 0.002415, -0.062585, -0.067585
#*# 	-0.085085, -0.042585, -0.025085, -0.082585, -0.080085
#*# 	-0.075085, -0.020085, -0.040085, -0.097585, -0.077585
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
#*#
#*# [bed_mesh test5]
#*# version = 1
#*# points =
#*# 	0.064824, 0.072324, 0.094824, 0.029824, 0.049824
#*# 	-0.065176, -0.027676, 0.017324, -0.060176, -0.082676
#*# 	-0.060176, -0.027676, 0.002324, -0.065176, -0.080176
#*# 	-0.087676, -0.047676, -0.030176, -0.090176, -0.087676
#*# 	-0.080176, -0.025176, -0.045176, -0.105176, -0.080176
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
#*#
#*# [bed_mesh test6]
#*# version = 1
#*# points =
#*# 	0.062990, 0.072990, 0.090490, 0.025490, 0.042990
#*# 	-0.074510, -0.034510, 0.007990, -0.062010, -0.084510
#*# 	-0.059510, -0.032010, 0.002990, -0.072010, -0.087010
#*# 	-0.094510, -0.054510, -0.034510, -0.094510, -0.087010
#*# 	-0.077010, -0.027010, -0.049510, -0.109510, -0.087010
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.5
#*# min_x = 10.0
#*# max_x = 201.0
#*# min_y = 17.0
#*# max_y = 210.0
