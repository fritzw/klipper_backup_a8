[gcode_macro RELOAD_MACROS]
gcode:
    DYNAMIC_MACRO

[gcode_macro TESTING]
gcode:
    {% set KEY = params.KEY|default('') %}
    {% set ALL = params.ALL|default(1) %}
    {%if KEY%}
    M118 {%for key in printer[KEY] %}{key}, {%endfor%}
    {%elif ALL%}
    M118 {%for key in printer %}{key}: [{%for key_inner in printer[key] %}{key_inner}, {%endfor%}], {%endfor%}
    {%else%}
    M118 {%for key in printer %}{key}, {%endfor%}
    {%endif%}

[gcode_macro TEST]
gcode:
    {printer.bed_mesh.probed_matrix[0]}

[gcode_macro BED_MESH_CORRECTION_PATTERN]
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set CLEAR = params.CLEAR|default(1)|int %}
    {% set WIDTH = params.WIDTH|default(1)|float %}
    {% set FLOW = params.FLOW|default(8)|float %}
    {% set x_min, y_min = printer.configfile.settings.bed_mesh.mesh_min %}
    {% set x_max, y_max = printer.configfile.settings.bed_mesh.mesh_max %}
    {% set x_cnt, y_cnt = printer.configfile.settings.bed_mesh.probe_count %}
    {% set y_step = (y_max - y_min) / (y_cnt - 1) %}
    {% set layers = [0.3, 0.2, 0.1] %}

    SAVE_GCODE_STATE NAME=BED_MESH_CORRECTION_PATTERN
    M83  ; extruder relative mode
    G90 ; move absolute
    ;M190 ; Wait for bed temp
    {% if CLEAR %}
      BED_MESH_CLEAR
    {% endif %}
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    G1 X80 Y-5 Z{layers[0]} F10000
    PRINT_LINE X=150 THICKNESS={layers[0]} WIDTH={WIDTH}
    G1 Y-4
    PRINT_LINE X=80 THICKNESS={layers[0]} WIDTH={WIDTH}
    G1 Y-3
    PRINT_LINE X=150 THICKNESS={layers[0]} WIDTH={WIDTH}
    {% for thickness in layers %}
      G1 E-1
      G1 Z{layers[:loop.index]|sum} F20000
      G1 X1 F20000
      G1 Y{y_min} F20000
      G1 E1
      PRINT_LINE Y={y_min+2} THICKNESS={layers[0]} WIDTH={WIDTH}
      PRINT_LINE X={2} THICKNESS={layers[0]} WIDTH={WIDTH}
      PRINT_LINE Y={y_min+0.9} THICKNESS={layers[0]} WIDTH={WIDTH}
      G1 X1 Y{y_min} F20000
      {% for i in range(y_cnt) %}
        PRINT_LINE Y={y_min + i * y_step} THICKNESS={thickness} WIDTH={WIDTH} FLOW={FLOW / layers[0] * thickness}
        PRINT_LINE X={219 - (i % 2) * 218} THICKNESS={thickness} WIDTH={WIDTH} FLOW={FLOW / layers[0] * thickness}
      {% endfor %}
    {% endfor %}
    G1 X-20 Y220
    M104 S160 ; cool extruder
    SAVE_GCODE_STATE NAME=BED_MESH_CORRECTION_PATTERN
    #BED_MESH_CALIBRATE PROFILE=bed_mesh_correction samples=8 speed=5


[gcode_macro BED_MESH_CORRECTION_PATTERN_FLAT]
gcode:
    {% set THICKNESS = params.THICKNESS|default(0.3)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set WIDTH = params.WIDTH|default(1)|float %}
    {% set FLOW = params.FLOW|default(8)|float %}
    {% set x_min, y_min = printer.configfile.settings.bed_mesh.mesh_min %}
    {% set x_max, y_max = printer.configfile.settings.bed_mesh.mesh_max %}
    {% set x_cnt, y_cnt = printer.configfile.settings.bed_mesh.probe_count %}
    {% set y_step = (y_max - y_min) / (y_cnt - 1) %}

    ;M190 ; Wait for bed temp
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    G1 X80 Y-5 Z{THICKNESS} F10000
    PRINT_LINE X=150 THICKNESS={THICKNESS} WIDTH={WIDTH}
    G1 Y-4
    PRINT_LINE X=80 THICKNESS={THICKNESS} WIDTH={WIDTH}
    G1 Y-3
    PRINT_LINE X=150 THICKNESS={THICKNESS} WIDTH={WIDTH}
    G1 X1 Y{y_min} F20000
    {% for i in range(y_cnt) %}
        PRINT_LINE Y={y_min + i * y_step} THICKNESS={THICKNESS} WIDTH={WIDTH} FLOW={FLOW}
        PRINT_LINE X={220 - (i % 2) * 219} THICKNESS={THICKNESS} WIDTH={WIDTH} FLOW={FLOW}
    {% endfor %}
    G1 X-20 Y220
    M104 S160 ; cool extruder

[gcode_macro PRINT_LINE]
gcode:
    {% set THICKNESS = params.THICKNESS|default(0.2)|float %}
    {% set WIDTH = params.WIDTH|default(0.5)|float %}
    {% set FLOW = params.FLOW|default(5)|float %}
    {% set FLOW = [ FLOW, 20 ] | min %} # Limit max flow rate to avoid grinding when the slicer outputs 200 for "max flow" tests.
    {% set X = params.X|default(printer.gcode_move.gcode_position.x)|float %}
    {% set Y = params.Y|default(printer.gcode_move.gcode_position.y)|float %}
    
    {% set cross_section = WIDTH * THICKNESS %}
    {% set dx = (X - printer.gcode_move.gcode_position.x) | abs %}
    {% set dy = (Y - printer.gcode_move.gcode_position.y) | abs %}
    #{% set xy_distance = math.sqrt(dx ** 2 + dy ** 2) %}
    {% set xy_distance = (dx,dy)|max %} # jinja2 does not have square root, as far as i could find
    {% set total_material = xy_distance * cross_section %}
    {% set filament_cross_section = printer.configfile.settings.extruder.filament_diameter ** 2 / 4 * 3.14159 %}
    {% set e_distance = total_material / filament_cross_section %}
    {% set total_seconds = total_material / FLOW %}
    {% if total_seconds > 0.001 %}
      {% set feed_rate = 60 * xy_distance / total_seconds %}
    {% else %}
      {% set feed_rate = 6000 %}
    {% endif %}
    #MESSAGE TEXT="THICKNESS: {THICKNESS}"
    #MESSAGE TEXT="WIDTH: {WIDTH}"
    #MESSAGE TEXT="FLOW: {FLOW}"
    #MESSAGE TEXT="X: {X}"
    #MESSAGE TEXT="Y: {Y}"
    #MESSAGE TEXT="cross_section: {cross_section}"
    #MESSAGE TEXT="dx: {dx}"
    #MESSAGE TEXT="dy: {dy}"
    #MESSAGE TEXT="xy_distance: {xy_distance}"
    #MESSAGE TEXT="total_material: {total_material}"
    #MESSAGE TEXT="filament_cross_section: {filament_cross_section}"
    #MESSAGE TEXT="e_distance: {e_distance}"
    #MESSAGE TEXT="total_seconds: {total_seconds}"
    #MESSAGE TEXT="feed_rate: {feed_rate}"
    {% if dx != 0 and dy != 0 %}
        MESSAGE TEXT="PRINT_LINE can only print X or Y, not both. dx,dy={dx},{dy}"
        #CANCEL_PRINT
    {% else %}
        SAVE_GCODE_STATE NAME=print_line
        M83  ; extruder relative mode
        G90 ; move absolute
        G1 X{X} Y{Y} E{e_distance} F{feed_rate}
        RESTORE_GCODE_STATE NAME=print_line
    {% endif %}

[gcode_macro MESSAGE]
gcode:
    {% set TEXT = params.TEXT|default("") %}
    M117 {TEXT} # Small text on klipper screen
    M118 {TEXT} # Text in Console + Large popup on klipper screen

[gcode_macro _COLD_PULL]
gcode:
    #{% set NOZZLE = params.NOZZLE|float %}
    {% set TEMP = params.TEMP|default(80)|float %}
    {% set SPEED_SLOW = params.SPEED_SLOW|default(5)|float %}
    {% set SPEED_FAST = params.SPEED_FAST|default(15)|float %}
    ; Cool down to room temperature (with fan to spped things up)
    M106 S100
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=0
    TEMPERATURE_WAIT  SENSOR=extruder MINIMUM=0 MAXIMUM=40
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=0
    G4 P5000 # Wait for 5 seconds
    M106 S0
    ; Heat up and pull on filament, first slowly then quickly quickly
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=200
    TEMPERATURE_WAIT  SENSOR=extruder  MINIMUM={TEMP-5}  MAXIMUM={TEMP+5}
    FORCE_MOVE  STEPPER=extruder  DISTANCE=-5  VELOCITY={SPEED_SLOW}
    FORCE_MOVE  STEPPER=extruder  DISTANCE=-50  VELOCITY={SPEED_FAST}
    ; Done, turn everything off again
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=0
    M106 S0

[gcode_macro _FORCE_UNLOAD]
gcode:
    #{% set NOZZLE = params.NOZZLE|float %}
    {% set TEMP = params.TEMP|default(80)|float %}
    {% set SPEED_SLOW = params.SPEED_SLOW|default(1)|float %}
    {% set SPEED_FAST = params.SPEED_FAST|default(15)|float %}
    ; Cool down to room temperature (with fan to spped things up)
    M106 S0
    ; Heat up and pull on filament, first slowly then quickly quickly
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=200
    TEMPERATURE_WAIT  SENSOR=extruder  MINIMUM={TEMP-5}  MAXIMUM={TEMP+5}
    FORCE_MOVE  STEPPER=extruder  DISTANCE=-5  VELOCITY={SPEED_SLOW}
    FORCE_MOVE  STEPPER=extruder  DISTANCE=-50  VELOCITY={SPEED_FAST}
    ; Done, turn everything off again
    SET_HEATER_TEMPERATURE  HEATER=extruder  TARGET=0
    M106 S0


[gcode_macro BED_MESH_CALIBRATE_ONCE]
gcode:
    {% if printer.bed_mesh.probed_matrix|count > 1 %}
    M117 Skip calibration
    M118 Skip calibration
    {% else %}
    M117 Calibrating bed
    M118 Calibrating bed
    BED_MESH_CALIBRATE
    {% endif %}
